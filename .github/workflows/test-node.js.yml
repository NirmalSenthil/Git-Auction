# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
 workflow_dispatch:

jobs:
  build:
    environment: stage
    runs-on: ubuntu-latest
    env:
      AWS_ECS_NGINX_TASK_DEFINITION: test-nginx

        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '18.16.1'
        cache: 'npm'
    - name: Create package.json if it doesn't exist
      run: |
       if [ ! -f package.json ]; then
         npm init -y
       fi
    - run: npm install
    - run: npm ci
    - run: |
       desired_count=1
       running_count=1
       rollout_state=COMPLETED
       task_definition_arn=arn:aws:ecs:us-east-1:240974398937:task-definition/test-nginx:7
       task_definition_name=$(basename "$task_definition_arn" | cut -d: -f1)

        echo "Task Definition from AWS: $task_definition_arn"
        echo "Expected Task Definition: ${{ env.AWS_ECS_NGINX_TASK_DEFINITION }}"
        echo "Desired Count: $desired_count, Running Count: $running_count"
        echo "Rollout State: $rollout_state"

       if [ "$desired_count" == "$running_count" ] && [ "$task_definition_name" == " ${{ env.AWS_ECS_NGINX_TASK_DEFINITION }}" ] && [ "$rollout_state" == "COMPLETED" ]; then
          echo "Deployment Status: Success"
          success=true
          break
       else
          echo "Deployment Status: In Progress"
          echo "Check $((check_count + 1)) of $max_checks: Desired tasks: $desired_count, Running tasks: $running_count."
       fi
         
